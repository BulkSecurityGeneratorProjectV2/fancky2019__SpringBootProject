#注意每个属性：（冒号）后要有一个空格

server:
  port: 8081


#公共配置与profiles选择无关 mapperLocations指的路径是src/main/resources
#mapper路径和实体对象路径
mybatis:
  #  Mapper文件存放的位置
  mapperLocations: classpath:mapper/**/*.xml
  #  实体类所在的包
  typeAliasesPackage: com.example.demo.model.entity

#开发配置
spring:
  application:
    name: SpringBootProject
  thymeleaf:
  #    view:
  #      prefix: /
  #      suffix: .html
  # html
  #   prefix: classpath:/templates/
  #    #图片
  #  resources:
  #    static-locations: classpath:/
  datasource:
    url: jdbc:sqlserver://localhost:1433;DatabaseName=WMS
    # url: jdbc:sqlserver://localhost:1433;DatabaseName=RABC
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    username: sa
    password: 123456

  redis:
    #  数据库索引
    database: 5
    # 远程服务器地址
    host: 127.0.0.1
    # 远程服务器端口
    port: 6379
    # 验证码
    password: fancky123456
    jedis:
      pool:
        # 最大空闲连接
        max-idle: 8
        # 最小空闲链接
        min-idle: 0
        # 最大连接数（负数表示没有限制）
        max-active: 8
        # 最大阻塞等待时间（负数表示没有限制）
        max-wait: 0
    # 链接超时时间（毫秒）
    timeout: 50

  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: fancky
    password: 123456
    #发布确认
    publisher-confirms: true
    # 开启发送失败退回
    publisher-returns: true
    virtual-host: /
    #开启手动Axk,手动无法自动加入死信队列，可以重试指定次数。
    #设置成默认的自动Ack,springboot会加入死信队列，一定设置死信队列。
    #    listener.simple.acknowledge-mode: manual
    listener:
      simple:
        retry:
          #是否开启消费者重试（为false时关闭消费者重试，这时消费端代码异常会一直重复收到消息）
          enabled: true
          #最大重试次数（包括执行一次，实际重试两次。1+2=3）
          max-attempts: 3
          #重试间隔时间（单位毫秒）
          initial-interval: 2000
        #公平分发模式 默认是1
        prefetch: 30
        #acknowledge-mode: manual
        #消费异常的数据进入死信队列
        default-requeue-rejected: false
    #    listener:
    #      direct:
    #        acknowledge-mode: manual
    #        #默认是1
    #        prefetch: 1


  #    template:
  #      mandatory: true
  #      #消费端
  #    listener:
  #      simple:
  #        acknowledge-mode: manual
  #        #初始连接数量
  #        concurrency: 5
  #        #最大连接数量
  #        max-concurrency: 10
  #        #公平分发模式
  #        prefetch: 1

  kafka:
    bootstrap-servers: localhost:9092 # 指定kafka 代理地址，可以多个
    producer: # 生产者
      retries: 0 # 设置大于0的值，则客户端会将发送失败的记录重新发送
      # 每次批量发送消息的数量
      batch-size: 16384
      buffer-memory: 33554432
      client-id: springbootKafkaProducer
      # 指定消息key和消息体的编解码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

    consumer:
      group-id: springbootKafkaConsumer
      enable-auto-commit: false
      # 禁用自动提交下面也注释。springboot会自动管理提交
      # auto-commit-interval: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

#Feign  开启熔断
#注意：节点不在spring内
#如果页面显示异常信息，说明熔断没有开启成功
feign:
  hystrix:
    enabled: true
ribbon:
  OkToRetryOnAllOperations: false #对所有操作请求都进行重试,默认false
  ReadTimeout: 5000   #负载均衡超时时间，默认值5000
  ConnectTimeout: 3000 #ribbon请求连接的超时时间，默认值2000
  MaxAutoRetries: 0     #对当前实例的重试次数，默认0
  MaxAutoRetriesNextServer: 1 #对切换实例的重试次数，默认1

hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        timeout:
          #如果enabled设置为false，则请求超时交给ribbon控制,为true,则超时作为熔断根据
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 1000 #断路器超时时间，默认1000ms

logging:
  config: classpath:log4j2.yml
demo:
  JWTSecretKey: GQDstcKsx0NHjPOuXOYg5MbeJ1XT0uFiwDVvVBrk


