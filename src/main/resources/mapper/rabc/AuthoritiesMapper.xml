<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.rabc.AuthoritiesMapper">

    <sql id="Base_Column_List">
        ID, MenuID, Name, Remark
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer"
            resultType="com.example.demo.model.entity.rabc.Authorities">
        select
        <include refid="Base_Column_List"/>
        from Authorities
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from Authorities
        where ID = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.example.demo.model.entity.rabc.Authorities">
        insert into Authorities ( MenuID, Name,
        Remark)
        values ( #{menuid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.example.demo.model.entity.rabc.Authorities">
        insert into Authorities
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="menuid != null">
                MenuID,
            </if>
            <if test="name != null">
                Name,
            </if>
            <if test="remark != null">
                Remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="menuid != null">
                #{menuid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.entity.rabc.Authorities">
        update Authorities
        <set>
            <if test="menuid != null">
                MenuID = #{menuid,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                Name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                Remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.model.entity.rabc.Authorities">
        update Authorities
        set MenuID = #{menuid,jdbcType=INTEGER},
        Name = #{name,jdbcType=VARCHAR},
        Remark = #{remark,jdbcType=VARCHAR}
        where ID = #{id,jdbcType=INTEGER}
    </update>

    <!--分页查询-->
    <!--data-->
    <select id="getPageData" parameterType="com.example.demo.model.viewModel.rabc.RoleMenusVM"
            resultType="com.example.demo.model.viewModel.rabc.RoleMenusVM">
        SELECT a.[ID] ,a.[MenuID] ,a.[Name] ,a.[Remark],m.FormName
        FROM [RABC].[dbo].[Authorities] a
        join [RABC].[dbo].[Menus] m on a.MenuID=m.ID
        where 1=1
        <if test="name != null">
            and a.Name LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="formname != null">
            and m.FormName LIKE CONCAT('%',#{formname,jdbcType=VARCHAR},'%')
        </if>
        ORDER BY 1
        OFFSET 10*(#{pageIndex,jdbcType=INTEGER}-1) ROWS FETCH NEXT #{pageSize,jdbcType=INTEGER} ROWS ONLY
    </select>
    <!--count-->
    <select id="getPageDataCount" parameterType="com.example.demo.model.viewModel.rabc.RoleMenusVM"
            resultType="java.lang.Long">
        SELECT Count(a.ID)
        FROM [RABC].[dbo].[Authorities] a
        join [RABC].[dbo].[Menus] m on a.MenuID=m.ID
        where 1=1
        <if test="name != null">
            and a.Name LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="formname != null">
            and m.FormName LIKE CONCAT('%',#{formname,jdbcType=VARCHAR},'%')
        </if>
    </select>

</mapper>