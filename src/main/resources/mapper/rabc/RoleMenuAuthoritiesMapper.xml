<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.rabc.RoleMenuAuthoritiesMapper">

    <sql id="Base_Column_List">
        ID, AuthorityID, RoleID, MenuID
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer"
            resultType="com.example.demo.model.entity.rabc.RoleMenuAuthorities">
        select
        <include refid="Base_Column_List"/>
        from RoleMenuAuthorities
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from RoleMenuAuthorities
        where ID = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.example.demo.model.entity.rabc.RoleMenuAuthorities">
        insert into RoleMenuAuthorities (AuthorityID, RoleID,
        MenuID)
        values ( #{authorityid,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER},
        #{menuid,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.example.demo.model.entity.rabc.RoleMenuAuthorities">
        insert into RoleMenuAuthorities
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="authorityid != null">
                AuthorityID,
            </if>
            <if test="roleid != null">
                RoleID,
            </if>
            <if test="menuid != null">
                MenuID,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="authorityid != null">
                #{authorityid,jdbcType=INTEGER},
            </if>
            <if test="roleid != null">
                #{roleid,jdbcType=INTEGER},
            </if>
            <if test="menuid != null">
                #{menuid,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.entity.rabc.RoleMenuAuthorities">
        update RoleMenuAuthorities
        <set>
            <if test="authorityid != null">
                AuthorityID = #{authorityid,jdbcType=INTEGER},
            </if>
            <if test="roleid != null">
                RoleID = #{roleid,jdbcType=INTEGER},
            </if>
            <if test="menuid != null">
                MenuID = #{menuid,jdbcType=INTEGER},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.model.entity.rabc.RoleMenuAuthorities">
        update RoleMenuAuthorities
        set AuthorityID = #{authorityid,jdbcType=INTEGER},
        RoleID = #{roleid,jdbcType=INTEGER},
        MenuID = #{menuid,jdbcType=INTEGER}
        where ID = #{id,jdbcType=INTEGER}
    </update>


    <!--分页查询-->
    <!--data-->
    <select id="getPageData" parameterType="com.example.demo.model.viewModel.rabc.RoleMenuAuthoritiesVM"
            resultType="com.example.demo.model.viewModel.rabc.RoleMenuAuthoritiesVM">
        SELECT rma.[ID] ,rma.[AuthorityID] ,rma.[RoleID],rma.[MenuID],a.Name AuthorityName,m.FormName MenuName,r.Name
        RoleName
        FROM [RABC].[dbo].[RoleMenuAuthorities] rma
        join [RABC].[dbo].[Authorities] a on rma.AuthorityID=a.ID
        join [RABC].[dbo].[Menus] m on rma.MenuID=m.ID
        join [RABC].[dbo].[Roles] r on rma.RoleID=r.ID
        where 1=1
        <if test="authorityName != null">
            and a.Name LIKE CONCAT('%',#{authorityName,jdbcType=VARCHAR},'%')
        </if>
        <if test="menuName != null">
            and m.FormName LIKE CONCAT('%',#{menuName,jdbcType=VARCHAR},'%')
        </if>
        <if test="roleName != null">
            and r.Name LIKE CONCAT('%',#{roleName,jdbcType=VARCHAR},'%')
        </if>
        ORDER BY 1
        OFFSET 10*(#{pageIndex,jdbcType=INTEGER}-1) ROWS FETCH NEXT #{pageSize,jdbcType=INTEGER} ROWS ONLY
    </select>
    <!--count-->
    <select id="getPageDataCount" parameterType="com.example.demo.model.viewModel.rabc.RoleMenuAuthoritiesVM"
            resultType="java.lang.Integer">
        SELECT Count(rma.ID)
        FROM [RABC].[dbo].[RoleMenuAuthorities] rma
        join [RABC].[dbo].[Authorities] a on rma.AuthorityID=a.ID
        join [RABC].[dbo].[Menus] m on rma.MenuID=m.ID
        join [RABC].[dbo].[Roles] r on rma.RoleID=r.ID
        where 1=1
        <if test="authorityName != null">
            and a.Name LIKE CONCAT('%',#{authorityName,jdbcType=VARCHAR},'%')
        </if>
        <if test="menuName != null">
            and m.FormName LIKE CONCAT('%',#{menuName,jdbcType=VARCHAR},'%')
        </if>
        <if test="roleName != null">
            and r.Name LIKE CONCAT('%',#{roleName,jdbcType=VARCHAR},'%')
        </if>
    </select>

</mapper>